% Parameters
m = 1000;    % car mass (kg)
b = 50;      % friction coefficient
g = 9.81;    % gravity

% PID gains
Kp = 1000;
Ki = 30;
Kd = 50;

% Initial conditions
target_speed = 20;   % target velocity in m/s
v = 0;               % initial speed
state.integral = 0;
state.prev_error = 0;

% Time settings
dt = 0.1;
T = 20;
time = 0:dt:T;
velocity = zeros(size(time));
x_pos = 0;
x = zeros(size(time));

% Setup figure and animation
figure;
car_plot = plot(0, 0, 'ro', 'MarkerSize', 12, 'MarkerFaceColor', 'r');
xlim([0 25]);
ylim([-2 2]);
xlabel('Distance');
ylabel('Road Shape');
title('Car Driving on a Changing Slope');
grid on;
hold on;

% Setup video
vObj = VideoWriter('car_animation.mp4', 'MPEG-4');
open(vObj);

for i = 1:length(time)
    t = time(i);

    % 1. Get road slope angle (theta)
    theta = slope_profile(t);   % function you created earlier

    % 2. Compute PID force
    error = target_speed - v;
    [F_engine, state] = pid_controller(error, dt, state, Kp, Ki, Kd);

    % 3. Add disturbance at t >= 12
    if t >= 12
        disturbance = -200;   % negative force = resistance
    else
        disturbance = 0;
    end

    % 4. Compute acceleration
    dvdt = (1/m) * (F_engine + disturbance - b*v - m*g*sin(theta));

    % 5. Integrate velocity
    v = v + dvdt * dt;
    velocity(i) = v;

    % 6. Update position
    x_pos = x_pos + v * dt;
    x(i) = x_pos;

    % 7. Get road height (for animation)
    road_height = 0.5 * sin(0.2 * x_pos);

    % 8. Update car animation
    set(car_plot, 'XData', x_pos, 'YData', road_height);
    drawnow;
    frame = getframe(gcf);
    writeVideo(vObj, frame);
end

% Close video
close(vObj);

% Final Plot: Speed vs Time
figure;
plot(time, velocity, 'LineWidth', 2);
xlabel('Time (s)');
ylabel('Velocity (m/s)');
title('Car Speed vs Time with PID Control');
grid on;
